#import "../fragments/baseTask.graphql"
#import "../fragments/annotation.graphql"
#import "../fragments/jiraTicket.graphql"

query GetTask($taskId: String!, $execution: Int) {
  taskFiles(taskId: $taskId, execution: $execution) {
    fileCount
  }
  task(taskId: $taskId, execution: $execution) {
    ...baseTask
    aborted
    abortInfo {
      user
      taskDisplayName
      taskID
      buildVariantDisplayName
      newVersion
      prClosed
    }
    baseTask {
      id
      execution
      timeTaken
    }
    activatedBy
    executionTasksFull {
      displayName
      id
      execution
      status
      baseStatus
      buildVariant
      buildVariantDisplayName
    }
    displayTask {
      id
      execution
      displayName
    }
    ingestTime
    estimatedStart
    finishTime
    hostId
    versionMetadata {
      id
      author
      isPatch
      revision
      project
      projectIdentifier
      order
    }
    requester
    projectId
    project {
      identifier
    }
    patchNumber
    dependsOn {
      buildVariant
      metStatus
      name
      requiredStatus
      taskId
    }
    canOverrideDependencies
    logs {
      allLogLink
      agentLogLink
      systemLogLink
      taskLogLink
      eventLogLink
    }
    startTime
    timeTaken
    totalTestCount
    failedTestCount
    spawnHostLink
    priority
    canRestart
    canAbort
    canSchedule
    canUnschedule
    canSetPriority
    ami
    distroId
    latestExecution
    blocked
    generatedBy
    generatedByName
    isPerfPluginEnabled
    minQueuePosition
    expectedDuration
    details {
      status
      type
      description
      timedOut
      timeoutType
      oomTracker {
        detected
        pids
      }
    }
    canModifyAnnotation
    annotation {
      ...annotation
    }
  }
}
