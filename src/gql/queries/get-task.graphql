#import "../fragments/baseTask.graphql"
#import "../fragments/annotation.graphql"

query GetTask($taskId: String!, $execution: Int) {
  task(taskId: $taskId, execution: $execution) {
    ...baseTask
    aborted
    abortInfo {
      buildVariantDisplayName
      newVersion
      prClosed
      taskDisplayName
      taskID
      user
    }
    activatedBy
    activatedTime
    ami
    annotation {
      ...annotation
    }
    baseTask {
      id
      execution
      timeTaken
    }
    blocked
    canAbort
    canDisable
    canModifyAnnotation
    canOverrideDependencies
    canRestart
    canSchedule
    canSetPriority
    canUnschedule
    dependsOn {
      buildVariant
      metStatus
      name
      requiredStatus
      taskId
    }
    details {
      description
      oomTracker {
        detected
        pids
      }
      status
      timedOut
      timeoutType
      type
    }
    displayTask {
      id
      displayName
      execution
    }
    distroId
    estimatedStart
    executionTasksFull {
      id
      baseStatus
      buildVariant
      buildVariantDisplayName
      displayName
      execution
      status
    }
    expectedDuration
    failedTestCount
    finishTime
    generatedBy
    generatedByName
    hostId
    ingestTime
    isPerfPluginEnabled
    latestExecution
    logs {
      allLogLink
      agentLogLink
      eventLogLink
      systemLogLink
      taskLogLink
    }
    minQueuePosition
    order
    patchNumber
    priority
    project {
      id
      identifier
    }
    resetWhenFinished
    requester
    spawnHostLink
    startTime
    taskFiles {
      fileCount
    }
    timeTaken
    totalTestCount
    versionMetadata {
      id
      author
      isPatch
      project
      projectIdentifier
      message
      order
      revision
    }
  }
}
