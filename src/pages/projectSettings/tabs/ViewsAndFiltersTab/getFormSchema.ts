import { GetFormSchema } from "components/SpruceForm";
import { CardFieldTemplate } from "components/SpruceForm/FieldTemplates";
import widgets from "components/SpruceForm/Widgets";
import { ProjectHealthView } from "gql/generated/types";

export const getFormSchema = (): ReturnType<GetFormSchema> => ({
  fields: {},
  schema: {
    properties: {
      parsleyFilters: {
        default: [],
        items: {
          properties: {
            caseSensitive: {
              default: false,
              oneOf: [
                {
                  enum: [false],
                  title: "Insensitive",
                  type: "boolean" as "boolean",
                },
                {
                  enum: [true],
                  title: "Sensitive",
                  type: "boolean" as "boolean",
                },
              ],
              title: "Case",
              type: "boolean" as "boolean",
            },
            exactMatch: {
              default: true,
              oneOf: [
                {
                  enum: [true],
                  title: "Exact",
                  type: "boolean" as "boolean",
                },
                {
                  enum: [false],
                  title: "Inverse",
                  type: "boolean" as "boolean",
                },
              ],
              title: "Match",
              type: "boolean" as "boolean",
            },
            expression: {
              default: "",
              format: "validRegex",
              minLength: 1,
              title: "Filter Expression",
              type: "string" as "string",
            },
          },
          type: "object" as "object",
        },
        title: "",
        type: "array" as "array",
      },
      parsleyFiltersTitle: {
        title: "Parsley Filters",
        type: "null",
      },
      view: {
        description:
          "This setting will define the default behavior of the Project Health page for all viewers of this project. Users can still toggle between views.",
        properties: {
          projectHealthView: {
            oneOf: [
              {
                description:
                  "Displays only task failures, making it easier to identify them, and groups tasks by status if they don't match any search criteria. Consider using it for troubleshooting specific issues.",
                enum: [ProjectHealthView.Failed],
                title: "Default view",
                type: "string" as "string",
              },
              {
                description:
                  "Displays all tasks without grouping. This view can be helpful for getting a comprehensive overview of all tasks.",
                enum: [ProjectHealthView.All],
                title: "All tasks view",
                type: "string" as "string",
              },
            ],
            type: "string" as "string",
          },
        },
        title: "Project Health View",
        type: "object" as "object",
      },
    },
    type: "object" as "object",
  },
  uiSchema: {
    parsleyFilters: {
      items: {
        caseSensitive: {
          "ui:aria-controls": ["case-insensitive", "case-sensitive"],
          "ui:data-cy": "parsley-filter-case-sensitivity",
          "ui:sizeVariant": "small",
          "ui:widget": widgets.SegmentedControlWidget,
        },
        exactMatch: {
          "ui:aria-controls": ["exact-match", "inverse-match"],
          "ui:data-cy": "parsley-filter-match-type",
          "ui:sizeVariant": "small",
          "ui:widget": widgets.SegmentedControlWidget,
        },
        expression: {
          "ui:data-cy": "parsley-filter-expression",
        },
        "ui:displayTitle": "New Parsley Filter",
      },
      "ui:addButtonText": "Add filter",
      "ui:data-cy": "parsley-filter-list",
      "ui:description":
        "These filters will be available by default in the Parsley log viewer for any logs generated by this project.",
      "ui:orderable": false,
      "ui:useExpandableCard": true,
    },
    parsleyFiltersTitle: {
      "ui:sectionTitle": true,
    },
    view: {
      projectHealthView: {
        "ui:widget": "radio",
      },
      "ui:ObjectFieldTemplate": CardFieldTemplate,
    },
  },
});
